Features:

Provide a Basic Interface for everything that interacts with the database.
This interface must ensure the object defines the following:
-A generalized format of the requested data to load it
-A generalized format of the data to save it
-A generalized format of the default data it holds when not explicitly initialized

Provide an Initialization routine that checks all specified formats and updates the database as needed:
-Dropped databases and tables are backed up (potentially just renamed?)
-Missing databases are added
-Missing tables are added
-Missing columns are added
-Default values are updated

=> Currently leaves out: Versioning of data, if a format in user-code changes, the old data would be backed up, but there would be no way to insert
a magical automatic conversion, even if one existed.

Assume we have a class with 10 versions, how do I want that to look in code?

Version 1: int a
Version 2: int a, int b
Version 3: int a, double b
Version 4: double a, double b
Version 5: double a, double b, string c
Version 6: double a, double b, string c, int d
Version 7: double a, double b, string c, long d
Version 8: double a, double b, string c, ulong d
Version 9: double a, double b, string c, ulong d, int e
Version 10: double a, double b, string c, ulong d, uint e

var v1 = new
{
	int a,
};
var v2 = new
{
	int a, int b
}